//kodingan darren yang udah aku sambungin ke kodinganku

KELAS NODE
public class Node {
	private Node next, prev;
	private Data data;
	public Node() {
		data = null;
		next = null;
		prev = null;
	}
	public Node(Data d, Node n, Node p) {
		next = n;
		prev = p;
		data = d;
	}
	public void setNext(Node n) {
		next = n;
	}
	public Node getNext() {
		return next;
	}
	public void setPrev(Node p) {
		prev = p;
	}
	public Node getPrev() {
		return prev;
	}
	public void setData(Data d) {
		data = d;
	}
	public Data getData() {
		return data;
	}
	// untuk mencetak data dari memanggil metode cetak data melalui referense data
	public void cetak() {
		data.cetakData();	
	}
}


KELAS DATA
public class Data {
	private String nama;
	private int tahun; 
	private String judul;
	private String penyanyi;
	private int durasi;
	
	Data (String nama, int tahun, String judul, String penyanyi, int durasi){
		setNama(nama);
		setTahun(tahun);
		setJudul(judul);
		setPenyanyi(penyanyi);
		setDurasi(durasi);
	}
	// ini buat setter nama
	public void setNama(String nama) {
		this.nama = nama;
	}
	// ini buat 
	public String getNama() {
		return nama;
	}
	public void setTahun(int tahun) {
		this.tahun = tahun;
	}
	public int getTahun() {
		return tahun;
	}
	public void setJudul(String judul) {
	    this.judul = judul;
    }
    public String getJudul(){
        return judul;
    }
    public void setPenyanyi(String penyanyi){
        this. penyanyi = penyanyi;
    }
    public String getPenyanyi(){
        return penyanyi;
    }
    public void setDurasi(int durasi){
        this.durasi = durasi;
    }
    public int getDurasi(){
        return durasi;
    }
	public void cetakData() {
        System.out.println(nama + ", Tahun Rilis: " + tahun + ", Judul Lagu: " + judul + ", Penyanyi: " + penyanyi + ", Durasi lagu: "+ durasi + " detik"); 
    }
}


KELAS MYLINKEDLIST
public class MyLinkedList {
	private Node head, tail;
	
	public void add(Node baru){
        if(head==null){
            head=baru;
            tail=baru;
        }
        else{
            baru.setNext(head);
            head.setPrev(baru);
            head=baru;
        }
    }
	public void add(Node baru, String setelah){
		if (head == null) {
			add(baru);
		}
		else {
			Node temp = head;
			while(temp != null) {
				if(temp.getData().getNama().equals(setelah)) {
					break;
				}
				temp = temp.getNext();
			}
			temp.getNext().setPrev(baru);
			baru.setPrev(temp);
			baru.setNext(temp.getNext());
			temp.setNext(baru);
		}
    }
	public void add_back(Node baru) {
		if(tail==null) {
			tail=baru;
			head=baru;
		}
		else {
			baru.setPrev(tail);
			tail.setNext(baru);
			tail=baru;
		}
	}
	public void hapus() {
		if (head == null) {
			System.out.println("Data kosong");
		}
		else {
			Node hapus = head;
			head = head.getNext();
			head.setPrev(null);
			hapus = null;
		}
	}
	public void hapus(String judul) {
		Node temp = head;
		if (head.getData().getNama().equals(judul)) {
			hapus();
		}
		else if(tail.getData().getNama().equals(judul)) {
			hapus_akhir();
		}
		while (temp != null) {
			if(temp.getNext() == null) {
				System.out.println("data rk nemu");
				break;
			}
			else if (temp.getNext().getData().getNama().equals(judul)) {
				Node hapus = temp.getNext();
				temp.setNext(hapus.getNext());
				hapus.getNext().setPrev(temp);
				hapus = null;
				break;
			}
			temp = temp.getNext();
		}
	}
	public void hapus_akhir() {
		if (tail == null) {
			System.out.println("data kosong");
		}
		else {
			Node hapus = tail;
			tail = tail.getPrev();
			tail.setNext(null);
			hapus = null;
		}
	}
	
	public void merge(MyLinkedList l2) {
		if(this.head == null || l2.head == null) {
			return;
		}
		this.tail.setNext(l2.head);
		l2.head.setPrev(this.tail);
		this.tail = l2.tail;
	}
	
	public void cetaklist(){
	    System.out.print("Tambah Tail: \n");
        Node temp = head;
        tail.cetak();
        System.out.print("\n");
        while(temp != null){
            temp.cetak();
            temp = temp.getNext();
        }
	}
	public void cetaklist_akhir(){
	    System.out.print("Tambah Head: \n");
        Node temp = tail;
        tail.cetak();
        System.out.print("\n");
        while(temp != null){
            temp.cetak();
            temp = temp.getPrev();
        }
	}
	
}



KELAS MAIN
public class Main {

	public static void main(String[] args) {
		MyLinkedList coba = new MyLinkedList();
		coba.add(new Node(new Data("urutan 1", 2024, "supernova", "aespa", 156), null, null));
		coba.add(new Node(new Data("urutan 2", 2022, "Love Dive", "IVE", 165), null, null));
		coba.add(new Node(new Data("urutan 3", 2023, "Paradoxx", "Enhypen", 159), null, null));
		coba.add(new Node(new Data("urutan 4", 2024, "Magnetic", "ILLIT", 163), null, null));
		coba.add(new Node(new Data("urutan 5", 2023, "Super Shy", "New Jeans", 178), null, null));
		coba.add(new Node(new Data("ini tambah tengah", 2018, "Miroh", "Stray KIds", 148), null, null), "urutan 3");
		
		coba.cetaklist();
		System.out.println();

		MyLinkedList l2 = new MyLinkedList();
		l2.add(new Node (new Data("new1", 2022, "Life's Too Short", "aespa", 139), null, null));
		l2.add(new Node (new Data("new2", 2050, "Drunk Text", "Henry Moodie", 152), null, null));
		
		coba.merge(l2);
		coba.cetaklist();
		System.out.println();
		coba.cetaklist_akhir();
	}
}
